@using bambamWP.Models
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedSessionStore
@inject NavigationManager Navigation
@inject IHttpClientFactory ClientFactory
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IConfiguration Configuration

@code {
    protected override async Task OnInitializedAsync(){
        string theurl = Configuration[BambamConstant.bbappname] != "" ?
            "/" + Configuration[BambamConstant.bbappname] + "/" :
            "/";
        
        var storageResp = await ProtectedSessionStore.GetAsync<String>("usuId");
        if (!storageResp.Success)
        {
            Navigation.NavigateTo(theurl);
        }

        ResponseResult apiResp = new ResponseResult();
        ApiEndpoints apiManager = new ApiEndpoints(Configuration["cmtheurl"]);
        string theUrl = apiManager.apiVerificarAdmin;
        Usuario theUsu = new Usuario();
        theUsu.usuId = storageResp.Value;
        var theData = new StringContent(
            JsonSerializer.Serialize(theUsu),
            System.Text.Encoding.UTF8,
            System.Net.Mime.MediaTypeNames.Application.Json
        );
        var client = ClientFactory.CreateClient();
        using var httpResponseMessage = await client.PostAsync(theUrl, theData);

        if (httpResponseMessage.IsSuccessStatusCode)
        {
            using var responseStream = await httpResponseMessage.Content.ReadAsStreamAsync();
            apiResp = await JsonSerializer.DeserializeAsync<ResponseResult>(responseStream);
        }
        else
        {
            Navigation.NavigateTo(theurl);
        }

        if (!apiResp.ok)
        {
            Navigation.NavigateTo(theurl);
        }
    }
}
